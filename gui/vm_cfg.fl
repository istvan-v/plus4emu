# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
do_not_include_H_from_C 
header_name {.hpp} 
code_name {.cpp}
decl {\#include "gui.hpp"} {selected
} 

class Plus4EmuGUI_MachineConfigWindow {open
} {
  decl {Plus4EmuGUI& gui;} {}
  Function {Plus4EmuGUI_MachineConfigWindow(Plus4EmuGUI& gui_) : gui(gui_)} {open
  } {
    Fl_Window window {
      label {Machine configuration}
      callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
  window->hide();
}} open
      xywh {182 139 400 450} type Double color 37 visible
    } {
      Fl_Button {} {
        label Apply
        callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
}}
        xywh {255 415 60 25} color 38 selection_color 39 labelcolor 52
      }
      Fl_Button {} {
        label OK
        callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
  window->hide();
}}
        xywh {325 415 60 25} color 38 selection_color 39 labelcolor 52
      }
      Fl_Tabs {} {open
        xywh {10 10 380 395} color 38 selection_color 38 labelcolor 52
      } {
        Fl_Group {} {
          label General open
          xywh {10 35 380 370} color 38 selection_color 38 labelcolor 52
        } {
          Fl_Group {} {
            label {Clock frequency and timing settings} open
            xywh {20 45 360 105} box ENGRAVED_FRAME color 38 labelcolor 52 align 21
          } {
            Fl_Value_Input vmCPUFrequencyValuator {
              label {CPU frequency}
              callback {{
  try {
    gui.config["vm.cpuClockFrequency"] = (unsigned int) (o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  o->value(double(gui.config.vm.cpuClockFrequency));
}}
              xywh {30 75 120 25} color 0 selection_color 238 labelcolor 52 align 8 when 4 minimum 1 maximum 1.5e+08 step 1 value 1 textcolor 52
              code0 {o->cursor_color(FL_YELLOW);}
            }
            Fl_Value_Input vmVideoFrequencyValuator {
              label {Video clock frequency (Hz)}
              callback {{
  try {
    gui.config["vm.videoClockFrequency"] = (unsigned int) (o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
}}
              xywh {30 110 120 25} color 0 selection_color 238 labelcolor 52 align 8 when 4 minimum 7e+06 maximum 3.6e+07 step 1 value 1.77345e+07 textcolor 52
              code0 {o->cursor_color(FL_YELLOW);}
            }
          }
          Fl_Group {} {
            label {File I/O} open
            xywh {20 160 360 70} box ENGRAVED_FRAME color 38 labelcolor 52 align 21
          } {
            Fl_Light_Button vmEnableFileIOValuator {
              label {Enable virtual file I/O}
              callback {{
  gui.config.vm.enableFileIO = (o->value() != 0);
  gui.config.vmConfigurationChanged = true;
}}
              tooltip {If enabled, the emulated machine can directly access files in the working directory if the ROM module for this function is loaded (p4fileio.rom to segment 06)} xywh {30 190 240 25} color 39 labelcolor 52
            }
          }
          Fl_Group {} {
            label {Tape emulation} open
            xywh {20 240 360 105} box ENGRAVED_FRAME color 38 labelcolor 52 align 21
          } {
            Fl_Light_Button tapeEnableFastModeValuator {
              label {Enable fast tape mode}
              callback {{
  gui.config.tape.fastMode = (o->value() != 0);
  gui.config.fastTapeModeChanged = true;
}}
              tooltip {Allow the emulation to run faster than real time while recording or playing tape} xywh {30 270 240 25} color 39 labelcolor 52
            }
            Fl_Value_Input tapeDefaultSampleRateValuator {
              label {Default tape sample rate (Hz)}
              callback {{
  gui.config.tape.defaultSampleRate = int(o->clamp(o->value()) + 0.5);
  gui.config.tapeDefaultSampleRateChanged = true;
  o->value(double(gui.config.tape.defaultSampleRate));
}}
              xywh {30 305 120 25} color 0 selection_color 238 labelcolor 52 align 8 when 4 minimum 10000 maximum 120000 step 1 value 24000 textcolor 52
              code0 {o->cursor_color(FL_YELLOW);}
            }
          }
        }
        Fl_Group {} {
          label Memory open
          xywh {10 35 380 370} color 38 selection_color 38 labelcolor 52 hide
        } {
          Fl_Value_Input memoryRAMSizeValuator {
            label {RAM size in kilobytes}
            callback {{
  try {
    gui.config["memory.ram.size"] = int(o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  o->value(double(gui.config.memory.ram.size));
}}
            xywh {20 45 120 25} color 0 selection_color 238 labelcolor 52 align 8 when 4 minimum 16 maximum 4096 step 16 value 64 textcolor 52
            code0 {o->cursor_color(FL_YELLOW);}
          }
          Fl_Scroll {} {
            label {ROM images} open
            xywh {20 95 360 300} box DOWN_BOX color 36 selection_color 40 labelcolor 52 align 5
          } {
            Fl_Group {} {open
              xywh {25 100 325 485} box FLAT_BOX color 36 labelcolor 52
            } {
              Fl_Box {} {
                label Segment
                xywh {30 105 80 20} color 36 labelcolor 52 align 20
              }
              Fl_Box {} {
                label {File name}
                xywh {110 105 80 20} color 36 labelcolor 52 align 20
              }
              Fl_Box {} {
                label {File offset}
                xywh {270 105 75 20} color 36 labelcolor 52 align 20
              }
              Fl_Box {} {
                label 00
                xywh {30 130 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM00FileNameValuator {
                callback {{
  setROMImageFile(0x00, o->value());
}}
                xywh {75 130 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x00);
}}
                xywh {245 130 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM00OffsetValuator {
                callback {{
  gui.config.memory.rom[0x00].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x00].offset));
}}
                xywh {280 130 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 01
                xywh {30 160 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM01FileNameValuator {
                callback {{
  setROMImageFile(0x01, o->value());
}}
                xywh {75 160 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x01);
}}
                xywh {245 160 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM01OffsetValuator {
                callback {{
  gui.config.memory.rom[0x01].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x01].offset));
}}
                xywh {280 160 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 02
                xywh {30 190 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM02FileNameValuator {
                callback {{
  setROMImageFile(0x02, o->value());
}}
                xywh {75 190 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x02);
}}
                xywh {245 190 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM02OffsetValuator {
                callback {{
  gui.config.memory.rom[0x02].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x02].offset));
}}
                xywh {280 190 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 03
                xywh {30 220 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM03FileNameValuator {
                callback {{
  setROMImageFile(0x03, o->value());
}}
                xywh {75 220 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x03);
}}
                xywh {245 220 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM03OffsetValuator {
                callback {{
  gui.config.memory.rom[0x03].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x03].offset));
}}
                xywh {280 220 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 04
                xywh {30 250 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM04FileNameValuator {
                callback {{
  setROMImageFile(0x04, o->value());
}}
                xywh {75 250 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x04);
}}
                xywh {245 250 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM04OffsetValuator {
                callback {{
  gui.config.memory.rom[0x04].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x04].offset));
}}
                xywh {280 250 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 05
                xywh {30 280 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM05FileNameValuator {
                callback {{
  setROMImageFile(0x05, o->value());
}}
                xywh {75 280 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x05);
}}
                xywh {245 280 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM05OffsetValuator {
                callback {{
  gui.config.memory.rom[0x05].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x05].offset));
}}
                xywh {280 280 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 06
                xywh {30 310 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM06FileNameValuator {
                callback {{
  setROMImageFile(0x06, o->value());
}}
                xywh {75 310 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x06);
}}
                xywh {245 310 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM06OffsetValuator {
                callback {{
  gui.config.memory.rom[0x06].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x06].offset));
}}
                xywh {280 310 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 07
                xywh {30 340 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM07FileNameValuator {
                callback {{
  setROMImageFile(0x07, o->value());
}}
                xywh {75 340 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x07);
}}
                xywh {245 340 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM07OffsetValuator {
                callback {{
  gui.config.memory.rom[0x07].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x07].offset));
}}
                xywh {280 340 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 10
                xywh {30 370 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM10FileNameValuator {
                callback {{
  setROMImageFile(0x10, o->value());
}}
                xywh {75 370 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x10);
}}
                xywh {245 370 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM10OffsetValuator {
                callback {{
  gui.config.memory.rom[0x10].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x10].offset));
}}
                xywh {280 370 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 20
                xywh {30 400 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM20FileNameValuator {
                callback {{
  setROMImageFile(0x20, o->value());
}}
                xywh {75 400 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x20);
}}
                xywh {245 400 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM20OffsetValuator {
                callback {{
  gui.config.memory.rom[0x20].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x20].offset));
}}
                xywh {280 400 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 21
                xywh {30 430 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM21FileNameValuator {
                callback {{
  setROMImageFile(0x21, o->value());
}}
                xywh {75 430 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x21);
}}
                xywh {245 430 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM21OffsetValuator {
                callback {{
  gui.config.memory.rom[0x21].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x21].offset));
}}
                xywh {280 430 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 22
                xywh {30 460 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM22FileNameValuator {
                callback {{
  setROMImageFile(0x22, o->value());
}}
                xywh {75 460 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x22);
}}
                xywh {245 460 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM22OffsetValuator {
                callback {{
  gui.config.memory.rom[0x22].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x22].offset));
}}
                xywh {280 460 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 23
                xywh {30 490 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM23FileNameValuator {
                callback {{
  setROMImageFile(0x23, o->value());
}}
                xywh {75 490 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x23);
}}
                xywh {245 490 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM23OffsetValuator {
                callback {{
  gui.config.memory.rom[0x23].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x23].offset));
}}
                xywh {280 490 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 30
                xywh {30 520 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM30FileNameValuator {
                callback {{
  setROMImageFile(0x30, o->value());
}}
                xywh {75 520 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x30);
}}
                xywh {245 520 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM30OffsetValuator {
                callback {{
  gui.config.memory.rom[0x30].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x30].offset));
}}
                xywh {280 520 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Box {} {
                label 31
                xywh {30 550 35 25} box DOWN_BOX color 0 labelcolor 52
              }
              Fl_Input memoryROM31FileNameValuator {
                callback {{
  setROMImageFile(0x31, o->value());
}}
                xywh {75 550 165 25} color 0 selection_color 238 labelcolor 52 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x31);
}}
                xywh {245 550 25 25} color 38 selection_color 39 labelcolor 52
              }
              Fl_Value_Input memoryROM31OffsetValuator {
                callback {{
  gui.config.memory.rom[0x31].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x31].offset));
}}
                xywh {280 550 65 25} color 0 selection_color 238 labelcolor 52 when 4 maximum 999999 step 1 textcolor 52
                code0 {o->cursor_color(FL_YELLOW);}
              }
            }
          }
        }
      }
    }
  }
  Function {~Plus4EmuGUI_MachineConfigWindow()} {open
  } {
    code {{
  delete window;
}} {}
  }
  Function {show()} {open return_type void
  } {
    code {{
  updateWindow();
  window->show();
}} {}
  }
  Function {shown()} {open return_type bool
  } {
    code {{
  return bool(window->shown());
}} {}
  }
  Function {hide()} {open return_type void
  } {
    code {{
  window->hide();
}} {}
  }
  Function {updateWindow()} {open return_type void
  } {
    code {{
  vmCPUFrequencyValuator->value(double(gui.config.vm.cpuClockFrequency));
  vmVideoFrequencyValuator->value(double(gui.config.vm.videoClockFrequency));
  vmEnableFileIOValuator->value(gui.config.vm.enableFileIO ? 1 : 0);
  tapeEnableFastModeValuator->value(gui.config.tape.fastMode ? 1 : 0);
  tapeDefaultSampleRateValuator->value(double(gui.config.tape.defaultSampleRate));
  memoryRAMSizeValuator->value(double(gui.config.memory.ram.size));
  memoryROM00FileNameValuator->value(gui.config.memory.rom[0x00].file.c_str());
  memoryROM00OffsetValuator->value(double(gui.config.memory.rom[0x00].offset));
  memoryROM01FileNameValuator->value(gui.config.memory.rom[0x01].file.c_str());
  memoryROM01OffsetValuator->value(double(gui.config.memory.rom[0x01].offset));
  memoryROM02FileNameValuator->value(gui.config.memory.rom[0x02].file.c_str());
  memoryROM02OffsetValuator->value(double(gui.config.memory.rom[0x02].offset));
  memoryROM03FileNameValuator->value(gui.config.memory.rom[0x03].file.c_str());
  memoryROM03OffsetValuator->value(double(gui.config.memory.rom[0x03].offset));
  memoryROM04FileNameValuator->value(gui.config.memory.rom[0x04].file.c_str());
  memoryROM04OffsetValuator->value(double(gui.config.memory.rom[0x04].offset));
  memoryROM05FileNameValuator->value(gui.config.memory.rom[0x05].file.c_str());
  memoryROM05OffsetValuator->value(double(gui.config.memory.rom[0x05].offset));
  memoryROM06FileNameValuator->value(gui.config.memory.rom[0x06].file.c_str());
  memoryROM06OffsetValuator->value(double(gui.config.memory.rom[0x06].offset));
  memoryROM07FileNameValuator->value(gui.config.memory.rom[0x07].file.c_str());
  memoryROM07OffsetValuator->value(double(gui.config.memory.rom[0x07].offset));
  memoryROM10FileNameValuator->value(gui.config.memory.rom[0x10].file.c_str());
  memoryROM10OffsetValuator->value(double(gui.config.memory.rom[0x10].offset));
  memoryROM20FileNameValuator->value(gui.config.memory.rom[0x20].file.c_str());
  memoryROM20OffsetValuator->value(double(gui.config.memory.rom[0x20].offset));
  memoryROM21FileNameValuator->value(gui.config.memory.rom[0x21].file.c_str());
  memoryROM21OffsetValuator->value(double(gui.config.memory.rom[0x21].offset));
  memoryROM22FileNameValuator->value(gui.config.memory.rom[0x22].file.c_str());
  memoryROM22OffsetValuator->value(double(gui.config.memory.rom[0x22].offset));
  memoryROM23FileNameValuator->value(gui.config.memory.rom[0x23].file.c_str());
  memoryROM23OffsetValuator->value(double(gui.config.memory.rom[0x23].offset));
  memoryROM30FileNameValuator->value(gui.config.memory.rom[0x30].file.c_str());
  memoryROM30OffsetValuator->value(double(gui.config.memory.rom[0x30].offset));
  memoryROM31FileNameValuator->value(gui.config.memory.rom[0x31].file.c_str());
  memoryROM31OffsetValuator->value(double(gui.config.memory.rom[0x31].offset));
}} {}
  }
  Function {setROMImageFile(uint8_t segment_, const std::string& fileName_)} {open private return_type void
  } {
    code {{
  try {
    char    cfgVarName[24];
    std::sprintf(&(cfgVarName[0]), "memory.rom.%02X.file", (unsigned int) segment_);
    Plus4Emu::ConfigurationDB::ConfigurationVariable& cv = gui.config[&(cfgVarName[0])];
    bool    wasEmpty = (std::string(cv).length() <= 0);
    cv = fileName_;
    std::string fName = std::string(cv);
    if (fName.length() > 0) {
      std::FILE *f = std::fopen(fName.c_str(), "rb");
      long    fSize = 0L;
      if (f) {
        if (std::fseek(f, 0L, SEEK_END) >= 0)
          fSize = std::ftell(f);
        std::fclose(f);
        f = (std::FILE *) 0;
      }
      long    offs = long(gui.config.memory.rom[segment_].offset);
      bool    updateFlag = false;
      while ((offs + 32767L) < fSize &&
             segment_ != 0x07 && segment_ != 0x13 &&
             segment_ != 0x23 && segment_ != 0x33) {
        segment_++;
        offs = offs + 16384L;
        updateFlag = true;
        gui.config.memory.rom[segment_].offset = int(offs);
        std::sprintf(&(cfgVarName[0]), "memory.rom.%02X.file", (unsigned int) segment_);
        gui.config[&(cfgVarName[0])] = fName;
      }
      if (updateFlag)
        updateWindow();
    }
    else if (!wasEmpty) {
      if (gui.config.memory.rom[segment_].offset != 0) {
        gui.config.memory.rom[segment_].offset = 0;
        updateWindow();
      }
    }
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
}} {}
  }
  Function {browseROMImageFile(uint8_t segment_)} {open private return_type void
  } {
    code {{
  try {
    std::string tmp;
    if (gui.browseFile(tmp, gui.romImageDirectory,
                       "ROM image files (*)",
                       Fl_File_Chooser::SINGLE,
                       "Select ROM image file")) {
      setROMImageFile(segment_, tmp);
      switch (segment_) {
      case 0x00:
        memoryROM00FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x01:
        memoryROM01FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x02:
        memoryROM02FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x03:
        memoryROM03FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x04:
        memoryROM04FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x05:
        memoryROM05FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x06:
        memoryROM06FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x07:
        memoryROM07FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x10:
        memoryROM10FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x20:
        memoryROM20FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x21:
        memoryROM21FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x22:
        memoryROM22FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x23:
        memoryROM23FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x30:
        memoryROM30FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x31:
        memoryROM31FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      }
    }
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
}} {}
  }
} 
