
// p4fliconv: high resolution interlaced FLI converter utility
// Copyright (C) 2007-2008 Istvan Varga <istvanv@users.sourceforge.net>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// The Plus/4 program files generated by this utility are not covered by the
// GNU General Public License, and can be used, modified, and distributed
// without any restrictions.

#ifndef P4FLICONV_IMGWRITE_HPP
#define P4FLICONV_IMGWRITE_HPP

#include "plus4emu.hpp"
#include "prgdata.hpp"

namespace Plus4FLIConv {

  /*!
   * Save the converted image from 'prgData' to 'fileName'. 'prgEndAddr' is
   * the first address that should not be saved. 'convType' is the video mode,
   * and can be one of the following values:
   *  -1: try to automatically guess the video mode from 'prgData'
   *   0: interlaced high resolution FLI
   *   1: interlaced multicolor FLI
   *   2: high resolution FLI, bitmap interlace only
   *   3: multicolor FLI, bitmap interlace only
   *   4: non-interlaced high resolution FLI
   *   5: non-interlaced multicolor FLI
   *   6: simple 320x200 high resolution mode without FLI
   *   7: simple 160x200 multicolor mode without FLI
   *   8: Logo Editor V2.0 multicolor character bank (128x64)
   * 'outputFormat' is the type of file that should be written, can be one of:
   *   0: Plus/4 PRG file with viewer (self extracting if compressed)
   *   1: "raw" Plus/4 PRG file, no viewer or decompressor is included
   *   2: PixelShop P4S format, interlaced FLI and X shift are not supported
   *   3: FED 1.5, 160x200 non-interlaced multicolor FLI with zero X shift only
   *   4: same as format 1 (raw PRG), but uses compression type 1 instead of 0
   *   5: same as format 1 (raw PRG), but uses compression type 2 instead of 0
   * If 'compressionLevel' is greater than zero (1 to 9), the output is
   * compressed; this parameter is ignored when writing PixelShop or FED
   * formats.
   * If an error occurs, std::exception is thrown.
   */
  void writeConvertedImageFile(
      const char *fileName, PRGData& prgData, unsigned int prgEndAddr,
      int convType, int outputFormat, int compressionLevel,
      void (*progressMessageCallback)(void *userData, const char *msg) =
          (void (*)(void *, const char *)) 0,
      bool (*progressPercentageCallback)(void *userData, int n) =
          (bool (*)(void *, int)) 0,
      void *progressCallbackUserData = (void *) 0);

}       // namespace Plus4FLIConv

#endif  // P4FLICONV_IMGWRITE_HPP

